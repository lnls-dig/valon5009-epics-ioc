############################################################
#
#              VALON 5009 FREQUENCY SYNTHESIZER
#                      RECORD DATABASE
#

############################################################
# GENERAL
#
# Desc: General parameters to control the device.

# Reset

record(bo, "$(P)$(R)Rst-Cmd"){
  field(DESC, "Reset to factory settings")
  field(ZNAM, "Off")
  field(ONAM, "On")
  field(HIGH, "0.5")
  field(FLNK, "$(P)$(R)ValidRst")
}

record(calcout, "$(P)$(R)ValidRst"){
  field(DESC, "Validate reset command")
  field(INPA, "$(P)$(R)Rst-Cmd")
  field(CALC, "A")
  field(OOPT, "When Non-zero")
  field(DTYP, "stream")
  field(OUT, "@valon5009.proto outRst $(PORT)")
}

# Restore configurations from Flash
record(bo, "$(P)$(R)RecallConfig-Cmd"){
  field(DESC, "Restore config from flash")
  field(ZNAM, "Off")
  field(ONAM, "On")
  field(FLNK, "$(P)$(R)ValidRecallConfig")
}

record(calcout, "$(P)$(R)ValidRecallConfig"){
  field(DESC, "Validate recall command")
  field(INPA, "$(P)$(R)RecallConfig-Cmd")
  field(CALC, "A")
  field(OOPT, "When Non-zero")
  field(DTYP, "stream")
  field(OUT, "@valon5009.proto outRecall $(PORT)")
}

# Save params to flash

record(bo, "$(P)$(R)SaveToFlash-Cmd"){
  field(DESC, "Save params to flash")
  field(ZNAM, "Off")
  field(ONAM, "On")
  field(HIGH, "0.5")
  field(FLNK, "$(P)$(R)ValidSaveToFlash")
}

record(calcout, "$(P)$(R)ValidSaveToFlash"){
  field(DESC, "Validate save params command")
  field(INPA, "$(P)$(R)SaveToFlash-Cmd")
  field(CALC, "A")
  field(OOPT, "When Non-zero")
  field(DTYP, "stream")
  field(OUT, "@valon5009.proto save $(PORT)")
}

############################################################
# FREQUENCY
#
# Desc: Frequency related parameters.

# Frequency

record(ao, "$(P)$(R)Src1Freq-SP"){
  field(DESC, "Source 1 output frequency")
  field(DTYP, "stream")
  field(PINI, "YES")
  field(PREC, "6")
  field(DRVH, "6000")
  field(DRVL, "23.5")
  field(HIGH, "6000")
  field(HIHI, "6000")
  field(LOW,  "23.5")
  field(LOLO, "23.5")
  field(HSV,  "MINOR")
  field(HHSV, "MINOR")
  field(LSV,  "MINOR")
  field(LLSV, "MINOR")
  field(EGU, "MHz")
  field(OUT, "@valon5009.proto outFreq1 $(PORT)")
  field(FLNK, "$(P)$(R)Src1Freq-RB")
}

record(ai, "$(P)$(R)Src1Freq-RB"){
  field(DESC, "Source 1 output frequency RB")
  field(DTYP, "stream")
  field(PREC, "6")
  field(HIGH, "6000")
  field(HIHI, "6000")
  field(LOW,  "23.5")
  field(LOLO, "23.5")
  field(HSV,  "MINOR")
  field(HHSV, "MINOR")
  field(LSV,  "MINOR")
  field(LLSV, "MINOR")
  field(EGU, "MHz")
  field(INP, "@valon5009.proto inFreq1 $(PORT)")
}

record(ao, "$(P)$(R)Src2Freq-SP"){
  field(DESC, "Source 2 output frequency")
  field(DTYP, "stream")
  field(PINI, "YES")
  field(PREC, "6")
  field(DRVH, "6000")
  field(DRVL, "23.5")
  field(HIGH, "6000")
  field(HIHI, "6000")
  field(LOW,  "23.5")
  field(LOLO, "23.5")
  field(HSV,  "MINOR")
  field(HHSV, "MINOR")
  field(LSV,  "MINOR")
  field(LLSV, "MINOR")
  field(EGU, "MHz")
  field(OUT, "@valon5009.proto outFreq2 $(PORT)")
  field(FLNK, "$(P)$(R)Src2Freq-RB")
}

record(ai, "$(P)$(R)Src2Freq-RB"){
  field(DESC, "Source 2 output frequency RB")
  field(DTYP, "stream")
  field(PREC, "6")
  field(HIGH, "6000")
  field(HIHI, "6000")
  field(LOW,  "23.5")
  field(LOLO, "23.5")
  field(HSV,  "MINOR")
  field(HHSV, "MINOR")
  field(LSV,  "MINOR")
  field(LLSV, "MINOR")
  field(EGU, "MHz")
  field(INP, "@valon5009.proto inFreq2 $(PORT)")
}

# Frequency Offset

# limit offset so that output freq
# is not greater than max freq
record(calcout, "$(P)$(R)Src1FreqOffsetLimit"){
  field(DESC, "Keep updating offset 1 high limit")
  field(INPA, "$(P)$(R)Src1Freq-RB CPP")
  field(INPB, "$(P)$(R)Src1Freq-RB.DRVH CPP")
  field(CALC, "B-A")
  field(OUT, "$(P)$(R)Src1FreqOffset-SP.DRVH")
}

record(ao, "$(P)$(R)Src1FreqOffset-SP"){
  field(DESC, "Source 1 frequency offset")
  field(DTYP, "stream")
  field(PINI, "YES")
  field(PREC, "6")
  field(DRVH, "6000")
  field(DRVL, "0")
  field(EGU, "MHz")
  field(OUT, "@valon5009.proto outOffset1 $(PORT)")
  field(FLNK, "$(P)$(R)Src1FreqOffset-RB")
}

record(ai, "$(P)$(R)Src1FreqOffset-RB"){
  field(DESC, "Source 1 frequency offset RB")
  field(DTYP, "stream")
  field(PREC, "6")
  field(EGU, "MHz")
  field(INP, "@valon5009.proto inOffset1 $(PORT)")
}

# limit offset so that output freq
# is not greater than max freq
record(calcout, "$(P)$(R)Src2FreqOffsetLimit"){
  field(DESC, "Keep updating offset 2 high limit")
  field(INPA, "$(P)$(R)Src2Freq-RB CPP")
  field(INPB, "$(P)$(R)Src2Freq-RB.DRVH CPP")
  field(CALC, "B-A")
  field(OUT, "$(P)$(R)Src2FreqOffset-SP.DRVH")
}

record(ao, "$(P)$(R)Src2FreqOffset-SP"){
  field(DESC, "Source 2 frequency offset")
  field(DTYP, "stream")
  field(PINI, "YES")
  field(PREC, "6")
  field(DRVH, "6000")
  field(DRVL, "0")
  field(EGU, "MHz")
  field(OUT, "@valon5009.proto outOffset2 $(PORT)")
  field(FLNK, "$(P)$(R)Src2FreqOffset-RB")
}

record(ai, "$(P)$(R)Src2FreqOffset-RB"){
  field(DESC, "Source 2 frequency offset RB")
  field(DTYP, "stream")
  field(PREC, "6")
  field(EGU, "MHz")
  field(INP, "@valon5009.proto inOffset2 $(PORT)")
}

############################################################
# POWER AND ATTENUATOR
#
# Desc: General parameters to control the device.

# Auto Setting

record(ao, "$(P)$(R)Src1Pwr-SP"){
  field(PINI, "YES")
  field(DESC, "Set src 1 power directly")
  field(PREC, "1")
  field(EGU, "dB")
  field(VAL, "0")
  field(FLNK, "$(P)$(R)Src1ConvLvl")
}

record(scalcout, "$(P)$(R)Src1ConvLvl"){
  field(DESC, "Convert level string to double")
  field(INAA, "$(P)$(R)Src1PwrLvl-Sel.ZRST")
  field(INBB, "$(P)$(R)Src1PwrLvl-Sel.ONST")
  field(INCC, "$(P)$(R)Src1PwrLvl-Sel.TWST")
  field(INDD, "$(P)$(R)Src1PwrLvl-Sel.THST")
  field(CALC, "A:=dbl(AA);B:=dbl(BB);C:=dbl(CC);D:=dbl(DD);1")
  field(FLNK, "$(P)$(R)Src1SetOutputPwr")
}

record(sub, "$(P)$(R)Src1SetOutputPwr"){
  field(DESC, "Set level and att based on SP")
  field(SNAM, "setOutput")
  field(EGU, "dB")
  field(PREC, "6")
  field(INPA, "$(P)$(R)Src1Pwr-SP")             # set point
  field(INPB, "$(P)$(R)Src1ConvLvl.A")          # pwr level 0
  field(INPC, "$(P)$(R)Src1ConvLvl.B")          # pwr level 1
  field(INPD, "$(P)$(R)Src1ConvLvl.C")          # pwr level 2
  field(INPE, "$(P)$(R)Src1ConvLvl.D")          # pwr level 3
  field(INPF, "$(P)$(R)AttenuatorStep-Cte")     # att step
  field(INPG, "$(P)$(R)BuffAmpGain-Cte")        # buff amp gain
  field(INPH, "$(P)$(R)Src1Attenuator-SP.DRVH") # max attenuator value
  field(BRSV, "INVALID")
  field(FLNK, "$(P)$(R)Src1SetOutputParam")
}

record(seq, "$(P)$(R)Src1SetOutputParam"){
  field(DESC, "Set pwr level and att based on calc")
  field(SELM, "All")
  field(DOL1, "$(P)$(R)Src1SetOutputPwr.I")     # calculated pwr level
  field(LNK1, "$(P)$(R)Src1PwrLvl-Sel PP")
  field(DOL2, "$(P)$(R)Src1SetOutputPwr.J")     # calculated att
  field(LNK2, "$(P)$(R)Src1Attenuator-SP PP")
  field(DOL3, "$(P)$(R)Src1SetOutputPwr.K")     # enable/disable buff amp
  field(LNK3, "$(P)$(R)Src1EnblBuffAmp-Sel PP")
}

record(scalcout, "$(P)$(R)Src1Pwr-RB"){
  field(DESC, "Src 1 power RB")
  field(PREC, "1")
  field(EGU, "dB")
  field(INAA, "$(P)$(R)Src1PwrLvl-Sts CPP")
  field(INPB, "$(P)$(R)Src1Attenuator-RB CPP")
  field(INPC, "$(P)$(R)Src1EnblBuffAmp-Sts CPP")
  field(INPD, "$(P)$(R)BuffAmpGain-Cte CPP")
  field(CALC, "dbl(AA)-B-(!C)*D")
}

record(ao, "$(P)$(R)Src2Pwr-SP"){
  field(PINI, "YES")
  field(DESC, "Set src 2 power directly")
  field(PREC, "1")
  field(EGU, "dB")
  field(VAL, "0")
  field(FLNK, "$(P)$(R)Src2ConvLvl")
}

record(scalcout, "$(P)$(R)Src2ConvLvl"){
  field(DESC, "Convert level string to double")
  field(INAA, "$(P)$(R)Src2PwrLvl-Sel.ZRST")
  field(INBB, "$(P)$(R)Src2PwrLvl-Sel.ONST")
  field(INCC, "$(P)$(R)Src2PwrLvl-Sel.TWST")
  field(INDD, "$(P)$(R)Src2PwrLvl-Sel.THST")
  field(CALC, "A:=dbl(AA);B:=dbl(BB);C:=dbl(CC);D:=dbl(DD);1")
  field(FLNK, "$(P)$(R)Src2SetOutputPwr")
}

record(sub, "$(P)$(R)Src2SetOutputPwr"){
  field(DESC, "Set level and att based on SP")
  field(SNAM, "setOutput")
  field(EGU, "dB")
  field(PREC, "6")
  field(INPA, "$(P)$(R)Src2Pwr-SP")             # set point
  field(INPB, "$(P)$(R)Src2ConvLvl.A")          # pwr level 0
  field(INPC, "$(P)$(R)Src2ConvLvl.B")          # pwr level 1
  field(INPD, "$(P)$(R)Src2ConvLvl.C")          # pwr level 2
  field(INPE, "$(P)$(R)Src2ConvLvl.D")          # pwr level 3
  field(INPF, "$(P)$(R)AttenuatorStep-Cte")     # att step
  field(INPG, "$(P)$(R)BuffAmpGain-Cte")        # buff amp gain
  field(INPH, "$(P)$(R)Src2Attenuator-SP.DRVH") # max attenuator value
  field(BRSV, "INVALID")
  field(FLNK, "$(P)$(R)Src2SetOutputParam")
}

record(seq, "$(P)$(R)Src2SetOutputParam"){
  field(DESC, "Set pwr level and att based on calc")
  field(SELM, "All")
  field(DOL1, "$(P)$(R)Src2SetOutputPwr.I")     # calculated pwr level
  field(LNK1, "$(P)$(R)Src2PwrLvl-Sel PP")
  field(DOL2, "$(P)$(R)Src2SetOutputPwr.J")     # calculated att
  field(LNK2, "$(P)$(R)Src2Attenuator-SP PP")
  field(DOL3, "$(P)$(R)Src2SetOutputPwr.K")     # enable/disable buff amp
  field(LNK3, "$(P)$(R)Src2EnblBuffAmp-Sel PP")
}

record(scalcout, "$(P)$(R)Src2Pwr-RB"){
  field(DESC, "Src 2 power RB")
  field(PREC, "1")
  field(EGU, "dB")
  field(INAA, "$(P)$(R)Src2PwrLvl-Sts CPP")
  field(INPB, "$(P)$(R)Src2Attenuator-RB CPP")
  field(INPC, "$(P)$(R)Src2EnblBuffAmp-Sts CPP")
  field(INPD, "$(P)$(R)BuffAmpGain-Cte CPP")
  field(CALC, "dbl(AA)-B-(!C)*D")
}

# Attenuator

record(ao, "$(P)$(R)AttenuatorStep-Cte"){
  field(DESC, "Min attenuator step")
  field(PREC, "1")
  field(VAL, "0.5") # constant
}

record(ao, "$(P)$(R)Src1Attenuator-SP"){
  field(DESC, "Source 1 attenuator")
  field(PREC, "1")
  field(DRVH, "31.5")
  field(DRVL, "0")
  field(EGU, "dB")
  field(FLNK, "$(P)$(R)Src1AttenuatorCalc")
}

record(calcout, "$(P)$(R)Src1AttenuatorCalc"){
  field(DESC, "Source 1 attenuator calc")
  field(DTYP, "stream")
  field(INPA, "$(P)$(R)Src1Attenuator-SP")
  field(INPB, "$(P)$(R)AttenuatorStep-Cte")
  field(CALC, "C:=A/B;D:=floor(C);A-(C-D)*B")
  field(OUT, "@valon5009.proto outAtten1 $(PORT)")
  field(FLNK, "$(P)$(R)Src1Attenuator-RB")
}

record(ai, "$(P)$(R)Src1Attenuator-RB"){
  field(DESC, "Source 1 attenuator RB")
  field(DTYP, "stream")
  field(PREC, "1")
  field(EGU, "dB")
  field(INP, "@valon5009.proto inAtten1 $(PORT)")
}

record(ao, "$(P)$(R)Src2Attenuator-SP"){
  field(DESC, "Source 2 attenuator")
  field(PREC, "1")
  field(DRVH, "31.5")
  field(DRVL, "0")
  field(EGU, "dB")
  field(FLNK, "$(P)$(R)Src2AttenuatorCalc")
}

record(calcout, "$(P)$(R)Src2AttenuatorCalc"){
  field(DESC, "Source 2 attenuator calc")
  field(DTYP, "stream")
  field(INPA, "$(P)$(R)Src2Attenuator-SP")
  field(INPB, "$(P)$(R)AttenuatorStep-Cte")
  field(CALC, "C:=A/B;D:=floor(C);A-(C-D)*B")
  field(OUT, "@valon5009.proto outAtten2 $(PORT)")
  field(FLNK, "$(P)$(R)Src2Attenuator-RB")
}

record(ai, "$(P)$(R)Src2Attenuator-RB"){
  field(DESC, "Source 2 attenuator RB")
  field(DTYP, "stream")
  field(PREC, "1")
  field(EGU, "dB")
  field(INP, "@valon5009.proto inAtten2 $(PORT)")
}

# Power level

record(mbbo, "$(P)$(R)Src1PwrLvl-Sel"){
  field(DESC, "Source 1 power level mode")
  field(ZRST, "6")
  field(ZRVL, "0")
  field(ONST, "9")
  field(ONVL, "1")
  field(TWST, "12")
  field(TWVL, "2")
  field(THST, "15")
  field(THVL, "3")
  field(DTYP, "stream")
  field(OUT, "@valon5009.proto outPwrLvl1 $(PORT)")
  field(FLNK, "$(P)$(R)Src1PwrLvl-Sts")
}

record(mbbi, "$(P)$(R)Src1PwrLvl-Sts"){
  field(DESC, "Source 1 power level mode Sts")
  field(ZRST, "6")
  field(ZRVL, "0")
  field(ONST, "9")
  field(ONVL, "1")
  field(TWST, "12")
  field(TWVL, "2")
  field(THST, "15")
  field(THVL, "3")
  field(DTYP, "stream")
  field(INP, "@valon5009.proto inPwrLvl1 $(PORT)")
}

record(mbbo, "$(P)$(R)Src2PwrLvl-Sel"){
  field(DESC, "Source 2 power level mode")
  field(ZRST, "6")
  field(ZRVL, "0")
  field(ONST, "9")
  field(ONVL, "1")
  field(TWST, "12")
  field(TWVL, "2")
  field(THST, "15")
  field(THVL, "3")
  field(DTYP, "stream")
  field(OUT, "@valon5009.proto outPwrLvl2 $(PORT)")
  field(FLNK, "$(P)$(R)Src2PwrLvl-Sts")
}

record(mbbi, "$(P)$(R)Src2PwrLvl-Sts"){
  field(DESC, "Source 2 power level mode Sts")
  field(ZRST, "6")
  field(ZRVL, "0")
  field(ONST, "9")
  field(ONVL, "1")
  field(TWST, "12")
  field(TWVL, "2")
  field(THST, "15")
  field(THVL, "3")
  field(DTYP, "stream")
  field(INP, "@valon5009.proto inPwrLvl2 $(PORT)")
}

# Enable/disable Output Buffer Amplifier

record(ao, "$(P)$(R)BuffAmpGain-Cte"){
  field(DESC, "Buff amplifier gain")
  field(PREC, "1")
  field(EGU, "dB")
  field(VAL, "25") # constant
}

record(bo, "$(P)$(R)Src1EnblBuffAmp-Sel"){
  field(DESC,  "Enable src 1 output buffer amplifier")
  field(ZNAM, "Off")
  field(ONAM, "On")
  field(DTYP, "stream")
  field(OUT, "@valon5009.proto outAmpEnbl1 $(PORT)")
  field(FLNK, "$(P)$(R)Src1EnblBuffAmp-Sts")
}

record(bi, "$(P)$(R)Src1EnblBuffAmp-Sts"){
  field(DESC,  "Enable src 1 output buffer amplifier sts")
  field(ZNAM, "Off")
  field(ONAM, "On")
  field(DTYP, "stream")
  field(INP, "@valon5009.proto inAmpEnbl1 $(PORT)")
}

record(bo, "$(P)$(R)Src2EnblBuffAmp-Sel"){
  field(DESC,  "Enable src 2 output buffer amplifier")
  field(ZNAM, "Off")
  field(ONAM, "On")
  field(DTYP, "stream")
  field(OUT, "@valon5009.proto outAmpEnbl2 $(PORT)")
  field(FLNK, "$(P)$(R)Src2EnblBuffAmp-Sts")
}

record(bi, "$(P)$(R)Src2EnblBuffAmp-Sts"){
  field(DESC,  "Enable src 2 output buffer amplifier sts")
  field(ZNAM, "Off")
  field(ONAM, "On")
  field(DTYP, "stream")
  field(INP, "@valon5009.proto inAmpEnbl2 $(PORT)")
}

# Power Down Source

record(bo, "$(P)$(R)Src1PwrOn-Sel"){
  field(DESC, "Power on source 1")
  field(PINI, "YES")
  field(ZNAM, "Off")
  field(ONAM, "On")
  field(DTYP, "stream")
  field(OUT, "@valon5009.proto outPwrOn1 $(PORT)")
  field(FLNK, "$(P)$(R)Src1PwrOn-Sts")
}

record(bi , "$(P)$(R)Src1PwrOn-Sts"){
  field(DESC, "Source 1 power status")
  field(ZNAM, "Off")
  field(ONAM, "On")
  field(DTYP, "stream")
  field(INP, "@valon5009.proto inPwrOn1 $(PORT)")
}

record(bo, "$(P)$(R)Src2PwrOn-Sel"){
  field(DESC, "Power on source 2")
  field(PINI, "YES")
  field(ZNAM, "Off")
  field(ONAM, "On")
  field(DTYP, "stream")
  field(OUT, "@valon5009.proto outPwrOn2 $(PORT)")
  field(FLNK, "$(P)$(R)Src2PwrOn-Sts")
}

record(bi , "$(P)$(R)Src2PwrOn-Sts"){
  field(DESC, "Source 2 power on status")
  field(ZNAM, "Off")
  field(ONAM, "On")
  field(DTYP, "stream")
  field(INP, "@valon5009.proto inPwrOn2 $(PORT)")
}

############################################################
# REFERENCE
#
# Desc: General parameters to control the device.

# Reference Frequency
# (must be set to the actual reference value used)

record(ao, "$(P)$(R)RefFreq-SP"){
  field(DESC, "Reference freq for both srcs")
  field(PINI, "YES")
  field(DRVH, "5")
  field(DRVL, "200")
  field(HIGH, "100")  # The optimum range for the ref freq is 20 MHz to 100 MHz
  field(LOW, "20")
  field(HSV, "MINOR")
  field(LSV, "MINOR")
  field(EGU, "MHz")
  field(DTYP, "stream")
  field(OUT, "@valon5009.proto outRefFreq $(PORT)")
  field(FLNK, "$(P)$(R)RefFreq-RB")
}

record(ai, "$(P)$(R)RefFreq-RB"){
  field(DESC, "Reference freq for both srcs")
  field(HIGH, "100")  # The optimum range for the ref freq is 20 MHz to 100 MHz
  field(LOW, "20")
  field(HSV, "MINOR")
  field(LSV, "MINOR")
  field(EGU, "MHz")
  field(DTYP, "stream")
  field(INP, "@valon5009.proto inRefFreq $(PORT)")
}

# Reference Frequency Trimming

record(longout, "$(P)$(R)RefTrim-SP"){
  field(DESC, "Trim reference freq")
  field(PINI, "YES")
  field(DRVH, "255")
  field(DRVL, "0")
  field(DTYP, "stream")
  field(OUT, "@valon5009.proto outRefTrim $(PORT)")
  field(FLNK, "$(P)$(R)RefTrim-RB")
}

record(longin, "$(P)$(R)RefTrim-RB"){
  field(DESC, "Trim reference freq RB")
  field(DTYP, "stream")
  field(INP, "@valon5009.proto inRefTrim $(PORT)")
}

# Reference Source Type

record(bo, "$(P)$(R)RefSrcType-Sel"){
  field(DESC, "Reference source type")
  field(PINI, "YES")
  field(ZNAM, "Internal")
  field(ONAM, "External")
  field(VAL, "0")
  field(DTYP, "stream")
  field(OUT, "@valon5009.proto outRefSrcType $(PORT)")
  field(FLNK, "$(P)$(R)RefSrcType-Sts")
}

record(bi, "$(P)$(R)RefSrcType-Sts"){
  field(DESC, "Reference source type Sts")
  field(ZNAM, "Internal")
  field(ONAM, "External")
  field(DTYP, "stream")
  field(INP, "@valon5009.proto inRefSrcType $(PORT)")
}

# Reference PDF (Phase/ Frequency Detector)

record(ao, "$(P)$(R)Src1PFD-SP"){
  field(DESC, "Src 1 phase/freq detector set point")
  field(PINI, "YES")
  field(DRVH, "140")
  field(DRVL, "1")
  field(HIGH, "50")  # The optimum range for the ref freq is 20 MHz to 50 MHz
  field(LOW, "20")
  field(HSV, "MINOR")
  field(LSV, "MINOR")
  field(EGU, "MHz")
  field(DTYP, "stream")
  field(OUT, "@valon5009.proto outSrc1PFD $(PORT)")
  field(FLNK, "$(P)$(R)Src1PFD-RB")
}

record(ai, "$(P)$(R)Src1PFD-RB"){
  field(DESC, "Src 1 phase/freq detector set point RB")
  field(HIGH, "50")  # The optimum range for the ref freq is 20 MHz to 50 MHz
  field(LOW, "20")
  field(HSV, "MINOR")
  field(LSV, "MINOR")
  field(EGU, "MHz")
  field(DTYP, "stream")
  field(INP, "@valon5009.proto inSrc1PFD $(PORT)")
}

record(ao, "$(P)$(R)Src2PFD-SP"){
  field(DESC, "Src 2 phase/freq detector set point")
  field(PINI, "YES")
  field(DRVH, "140")
  field(DRVL, "1")
  field(HIGH, "50")  # The optimum range for the ref freq is 20 MHz to 50 MHz
  field(LOW, "20")
  field(HSV, "MINOR")
  field(LSV, "MINOR")
  field(EGU, "MHz")
  field(DTYP, "stream")
  field(OUT, "@valon5009.proto outSrc2PFD $(PORT)")
  field(FLNK, "$(P)$(R)Src2PFD-RB")
}

record(ai, "$(P)$(R)Src2PFD-RB"){
  field(DESC, "Src 2 phase/freq detector set point RB")
  field(HIGH, "50")  # The optimum range for the ref freq is 20 MHz to 50 MHz
  field(LOW, "20")
  field(HSV, "MINOR")
  field(LSV, "MINOR")
  field(EGU, "MHz")
  field(DTYP, "stream")
  field(INP, "@valon5009.proto inSrc2PFD $(PORT)")
}

# Reference Doubler

record(bo, "$(P)$(R)Src1RefDoubler-Sel"){
  field(DESC, "Enable src 1 reference doubler")
  field(PINI, "YES")
  field(ZNAM, "Off")
  field(ONAM, "On")
  field(DTYP, "stream")
  field(OUT, "@valon5009.proto outSrc1RefDoubler $(PORT)")
  field(FLNK, "$(P)$(R)Src1RefDoubler-Sts")
}

record(bi, "$(P)$(R)Src1RefDoubler-Sts"){
  field(DESC, "Src 1 reference doubler enable Sts")
  field(ZNAM, "Off")
  field(ONAM, "On")
  field(DTYP, "stream")
  field(INP, "@valon5009.proto inSrc1RefDoubler $(PORT)")
}

record(bo, "$(P)$(R)Src2RefDoubler-Sel"){
  field(DESC, "Enable src 2 reference doubler")
  field(PINI, "YES")
  field(ZNAM, "Off")
  field(ONAM, "On")
  field(DTYP, "stream")
  field(OUT, "@valon5009.proto outSrc2RefDoubler $(PORT)")
  field(FLNK, "$(P)$(R)Src2RefDoubler-Sts")
}

record(bi, "$(P)$(R)Src2RefDoubler-Sts"){
  field(DESC, "Src 2 reference doubler enable Sts")
  field(ZNAM, "Off")
  field(ONAM, "On")
  field(DTYP, "stream")
  field(INP, "@valon5009.proto inSrc2RefDoubler $(PORT)")
}

# Reference Divider

record(bo, "$(P)$(R)Src1RefDivider-Sel"){
  field(DESC, "Enable src 1 reference divider")
  field(PINI, "YES")
  field(ZNAM, "Off")
  field(ONAM, "On")
  field(DTYP, "stream")
  field(OUT, "@valon5009.proto outSrc1RefDivider $(PORT)")
  field(FLNK, "$(P)$(R)Src1RefDivider-Sts")
}

record(bi, "$(P)$(R)Src1RefDivider-Sts"){
  field(DESC, "Src 1 reference divider enable Sts")
  field(ZNAM, "Off")
  field(ONAM, "On")
  field(DTYP, "stream")
  field(INP, "@valon5009.proto inSrc1RefDivider $(PORT)")
}

record(bo, "$(P)$(R)Src2RefDivider-Sel"){
  field(DESC, "Enable src 2 reference divider")
  field(PINI, "YES")
  field(ZNAM, "Off")
  field(ONAM, "On")
  field(DTYP, "stream")
  field(OUT, "@valon5009.proto outSrc2RefDivider $(PORT)")
  field(FLNK, "$(P)$(R)Src2RefDivider-Sts")
}

record(bi, "$(P)$(R)Src2RefDivider-Sts"){
  field(DESC, "Src 2 reference divider enable Sts")
  field(ZNAM, "Off")
  field(ONAM, "On")
  field(DTYP, "stream")
  field(INP, "@valon5009.proto inSrc2RefDivider $(PORT)")
}

